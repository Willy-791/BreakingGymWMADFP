@model IEnumerable<BreakingGymWebEN.MembresiaEN>

@{
    ViewData["Title"] = "Planes de Membresía";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container my-5">
    <h2 class="colorV text-center mb-4">Elige tu plan</h2>
    <p class="text-center">Actualice a funciones premium para mejorar su productividad y optimizar su flujo de trabajo. ¡Seleccione el plan que mejor se adapte a sus necesidades!</p>

    <div class="row justify-content-center">
        @foreach (var plan in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100 shadow-sm">
                    <div class="card-header text-center bg-light">
                        <h4 class="colorA my-0">@plan.Nombre</h4>
                        <h5 class="my-2 text-primary">@("$" + plan.Precio) <small class="text-muted">/mes</small></h5>
                        <p class="text-muted">@plan.Duracion</p>
                    </div>
                    <div class="card-body d-flex flex-column">
                        <ul class="list-unstyled mb-4">
                            @foreach (var beneficio in plan.Descripcion.Split(';'))
                            {
                                <li><i class="fa-solid fa-check " style="color:#ffc107"></i> @beneficio.Trim()</li>
                            }
                        </ul>
                        <a href="@Url.Action("Login", "login", new { idMembresia = plan.Id })" class="btnV btn1 mt-auto">Elegir este plan</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        @* Éxitos *@
        @if (TempData["ExitoGuardar"] != null)
        {
                        <text>
                            Swal.fire({
                                icon: "success",
                                title: "Éxito",
                                text: "@TempData["ExitoGuardar"]"
                            });
                        </text>
        }
        @if (TempData["ExitoModificar"] != null)
        {
                        <text>
                            Swal.fire({
                                icon: "success",
                                title: "Éxito",
                                text: "@TempData["ExitoModificar"]"
                            });
                        </text>
        }
        @if (TempData["ExitoEliminar"] != null)
        {
                        <text>
                            Swal.fire({
                                icon: "success",
                                title: "Éxito",
                                text: "@TempData["ExitoEliminar"]"
                            });
                        </text>
        }

        @* Errores (ejemplo duplicado) *@
        @if (TempData["ErrorDuplicado"] != null)
        {
                        <text>
                            Swal.fire({
                                icon: "error",
                                title: "Error",
                                text: "@TempData["ErrorDuplicado"]"
                            });
                        </text>
        }
    });
</script>
<style>
    .card {
        animation: titleEntry 2s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }

    @@keyframes titleEntry {
        0% {
            transform: translateY(-100px) scale(0.5); /* Viene desde arriba, pequeño */
            opacity: 0; /* Transparente */
        }

        100% {
            transform: translateY(0) scale(1); /* Posición normal, tamaño normal */
            opacity: 1; /* Completamente visible */
        }
    }

</style>